program Project1;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils;

type Troomp=object
    length, width:single;
    function Square:single; virtual;
    procedure Print;
    constructor Init(l,w:single);
end;
Function TRoomP.Square;
   Begin Result:= length* width;  End;
Procedure TRoomP.Print;
   Begin WriteLn('Square =', Square:6:2);  End;
Constructor TRoomP.Init;
   Begin length:=l;  width:=w;  End;
Type TVRoomP = object(TRoomP)
                height:single;
                function Square:single; cirtual;
                constructor Init(l,w,h:single);
               end;
Constructor TVRoomP.Init;
   Begin
       inherited Init(l,w);
       height:=h;
   End;

Function TVRoomP.Square;
  Begin
    Square:=2*(inherited Square+height*(length+width));
  End;

Var pA: ^TRoomP; B:TVRoomP;
Begin
    B.Init(3.5,5.1,2.7);
    WriteLn('Square =', B.Square:6:2);
    pA:=@B;
    WriteLn('Square =', pA^.Square:6:2);
    ReadLn;
end.

//Var A:TRoomP; B:TVRoomP;
//Begin
//    A.Init(3.5,5.1);
//    A.Print;
//    B.Init(3.5,5.1,2.7);
//    B.Print;
//    ReadLn;
//End.




//var
//    a, i: integer;
//    b: real;
//    s: string;
//    p1, p2: ^integer;
//    p3: ^real;
//    p: pointer;
//    arr: array[1..5] of integer;
//    procedure sum(h:integer);
//    begin
//      h := 6;
//    end;



//begin
//  a := 5;
//  b := 4.32;
//  sum(a);
//  writeln(a);
//  p1 := @a;
//  p3 := @b;
//  p2 := p1;
//  p := p3;
//  p1 := p;
//  writeln(p1^);
//  writeln;
//  for i := 0 to 10 do
//    writeln(DiskFree(i));
//  try
//    { TODO -oUser -cConsole Main : Insert code here }
//  except
//    on E: Exception do
//      Writeln(E.ClassName, ': ', E.Message);
//  end;
//end.
