unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls,
  Vcl.Samples.Spin, Vcl.ExtCtrls;

type
  TForm2 = class(TForm)
    Label1: TLabel;
    AngleLabel: TLabel;
    Label3: TLabel;
    Edit1: TEdit;
    Edit2: TEdit;
    AngleEdit: TEdit;
    SpinButton1: TSpinButton;
    SpinButton2: TSpinButton;
    SpinButton3: TSpinButton;
    FirstImage: TImage;
    CleanButton: TButton;
    StartButton: TButton;
    ExitButton: TButton;
    ColorChoice: TRadioGroup;
    procedure FirstImageMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure CleanButtonClick(Sender: TObject);
    procedure SpinButton1DownClick(Sender: TObject);
    procedure SpinButton1UpClick(Sender: TObject);
    procedure ExitButtonClick(Sender: TObject);
    procedure StartButtonClick(Sender: TObject);
    procedure SpinButton2DownClick(Sender: TObject);
    procedure SpinButton2UpClick(Sender: TObject);
    procedure SpinButton3DownClick(Sender: TObject);
    procedure SpinButton3UpClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);


  private
    { Private declarations }
  public
    { Public declarations }
  end;

  type TRect = record
         case Integer of
           0: (Left, Top, Right, Bottom: Integer);
           1: (TopLeft, BottomRight: TPoint);
         end;
  type TCircuit = record
    Center_x, Center_y, Radius: integer;
  end;

  type Tline = record
    Left, Top: integer;
  end;


var
  Form2: TForm2;
  Rect : TRect;
  Circuit: TCircuit;
  Line: Tline;
  rad, len, angle: integer;

implementation

{$R *.dfm}

procedure TForm2.CleanButtonClick(Sender: TObject);
begin
   FirstImage.Picture := nil;
   FirstImage.Canvas.Brush.Color := clWhite;
end;

procedure TForm2.StartButtonClick(Sender: TObject);
begin
var x, y, rad, len, angle, dx, dy: integer; var radian : extended;
  case ColorChoice.ItemIndex of
    0 : FirstImage.Canvas.Brush.Color := clRed;
    1 : FirstImage.Canvas.Brush.Color := clGreen;
    2 : FirstImage.Canvas.Brush.Color := clBlue;
    3 : FirstImage.Canvas.Brush.Color := clBlack;
    4 : FirstImage.Canvas.Brush.Color := clYellow;
    5 : FirstImage.Canvas.Brush.Color := clWhite;
  end;
  if Edit1.text <> '' then
    begin
      x := Circuit.Center_x;
      y := Circuit.Center_y;
      rad := StrToInt(Edit1.text);
      FirstImage.Canvas.Ellipse(x - rad, y - rad, x + rad, y + rad);
      Edit1.clear;
    end
  else if ((Edit2.text <> '') and (AngleEdit.text <> '')) then
    begin
      x := Line.Left;
      y := Line.Top;
      angle := StrToInt(AngleEdit.text);
      len := StrToInt(Edit2.text);
      radian := angle/180 * pi;
      dx := round(len*(cos(radian)));
      dy := round(len*(sin(radian)));
      FirstImage.Canvas.MoveTo(x, y);
      FirstImage.Canvas.LineTo(X + dx, Y - dy);
      Edit2.clear;
      AngleEdit.clear;
    end;
end;

procedure TForm2.ExitButtonClick(Sender: TObject);
begin
  Close;
end;

procedure TForm2.FormActivate(Sender: TObject);
begin
  FirstImage.Picture := nil;
  FirstImage.Canvas.Brush.Color := clWhite;
end;

procedure TForm2.FirstImageMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbLeft then
    begin
      Line.Left:=x;
      Line.Top:=y;
      AngleLabel.Enabled := True;
      Label3.Enabled := True;
      Label1.Enabled := False;
      Edit2.Enabled := True;
      AngleEdit.Enabled := True;
      Edit1.Enabled := False;
      SpinButton1.Enabled := False;
      SpinButton2.Enabled := True;
      SpinButton3.Enabled := True;
      Edit2.setfocus;
    end
  else
    begin
      Circuit.Center_x := x;
      Circuit.Center_y := y;
      Label1.Enabled := True;
      AngleLabel.Enabled := False;
      Label3.Enabled := False;
      Edit1.Enabled := True;
      Edit2.Enabled := False;
      AngleEdit.Enabled := False;
      SpinButton1.Enabled := True;
      SpinButton2.Enabled := False;
      SpinButton3.Enabled := False;
      Edit1.setfocus;
    end;
end;

procedure TForm2.SpinButton1DownClick(Sender: TObject);
begin
    if Edit1.text <> '' then
       rad := StrtoInt(Edit1.text)
    else
      rad := 0;
    rad := rad - 1;
    Edit1.text := IntToStr(rad);
end;

procedure TForm2.SpinButton1UpClick(Sender: TObject);
begin
    if Edit1.text <> '' then
       rad := StrtoInt(Edit1.text)
    else
      rad := 0;
    rad := rad + 1;
    Edit1.text := IntToStr(rad);
end;

procedure TForm2.SpinButton2DownClick(Sender: TObject);
begin
  if Edit2.text <> '' then
    len := StrtoInt(Edit2.text)
  else
    len := 0;
  len := len - 1;
  Edit2.text := IntToStr(len);
end;

procedure TForm2.SpinButton2UpClick(Sender: TObject);
begin
  if Edit2.text <> '' then
    len := StrtoInt(Edit2.text)
  else
    len := 0;
  len := len + 1;
  Edit2.text := IntToStr(len);
end;

procedure TForm2.SpinButton3DownClick(Sender: TObject);
begin
  if AngleEdit.text <> '' then
    angle := StrtoInt(AngleEdit.text)
  else
    angle := 0;
  angle := angle - 1;
  AngleEdit.text := IntToStr(angle);
end;

procedure TForm2.SpinButton3UpClick(Sender: TObject);
begin
  if AngleEdit.text <> '' then
    angle := StrtoInt(AngleEdit.text)
  else
    angle := 0;
  angle := angle + 1;
  AngleEdit.text := IntToStr(angle);
end;

end.
